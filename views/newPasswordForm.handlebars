<div class="container">

  {{! Display a toast message if one was provided. }}
  {{#if toastMessage}}
    <p>{{toastMessage}}</p>
  {{/if}}

  <h1>Reset password</h1>
  <form action="/reset-password" method="POST">

    <div class="flex-col mb">
      <label for="newPassword">New Password:</label>
      <input type="password" name="newPassword" id="newPassword" required />
    </div>
    <div class="flex-col mb">
      <label for="confirmNewPassword">Confirm new password:</label>
      <span class="validationSpan" id="passwordExistsValue"></span>
      <input type="password" name="confirmNewPassword" id="confirmNewPassword" required />
    </div>
    <div>
      <input name="email" type="hidden" value={{userEmail}}>
    </div>

    <div class="flex-row justify-sb align-center">
      <button id="resetBtn" type="submit">Reset password</button>
    </div>
  </form>

</div>

{{!-- We created an inline js script as we were unable to access curd-function js file through newPassword form --}}
<script>
const newPassword = document.querySelector("#newPassword");
const confirmNewPassword = document.querySelector("#confirmNewPassword");
const resetBtn = document.querySelector('#resetBtn');
const passwordExistsSpan = document.querySelector("#passwordExistsValue");

//Validation for re entering password. Check that input values in both password inputs match. If not, submit button is disabled to prevent form submission.
  //Validation for re entering password reset
  if (confirmNewPassword != null) {
     confirmNewPassword.addEventListener("keyup", function () {
       if (confirmNewPassword.value != newPassword.value) {
         passwordExistsSpan.innerHTML = "Password does not match";
         confirmNewPassword.classList.add("error-input");
         resetBtn.setAttribute("disabled", "true");
       } else {
         passwordExistsSpan.innerHTML = "Password matches";
         confirmNewPassword.classList.remove("error-input");
         resetBtn.removeAttribute("disabled", "true");
       }
     });
  }


</script>